# Generated by Django 5.2.6 on 2025-09-25 18:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=10)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('has_emergency_services', models.BooleanField(default=True)),
                ('has_ambulance', models.BooleanField(default=True)),
                ('total_ambulances', models.PositiveIntegerField(default=1)),
                ('available_ambulances', models.PositiveIntegerField(default=1)),
                ('specializations', models.TextField(help_text='Comma-separated list of medical specializations')),
                ('operates_24x7', models.BooleanField(default=True)),
                ('operating_hours', models.TextField(blank=True, help_text='Operating hours if not 24x7')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('emergency_contact_address', models.TextField(blank=True)),
                ('blood_group', models.CharField(blank=True, max_length=5)),
                ('medical_conditions', models.TextField(blank=True, help_text='Chronic conditions, allergies, etc.')),
                ('medications', models.TextField(blank=True, help_text='Current medications')),
                ('medical_notes', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('is_elderly', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Emergency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACKNOWLEDGED', 'Acknowledged'), ('DISPATCHED', 'Ambulance Dispatched'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=15)),
                ('description', models.TextField(help_text='Description of the emergency')),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('location_address', models.TextField(blank=True)),
                ('ambulance_dispatched_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('response_notes', models.TextField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergencies', to=settings.AUTH_USER_MODEL)),
                ('assigned_hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergencies', to='db.hospital')),
            ],
            options={
                'verbose_name_plural': 'Emergencies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('relationship', models.CharField(choices=[('SPOUSE', 'Spouse'), ('CHILD', 'Child'), ('PARENT', 'Parent'), ('SIBLING', 'Sibling'), ('FRIEND', 'Friend'), ('CAREGIVER', 'Caregiver'), ('NEIGHBOR', 'Neighbor'), ('OTHER', 'Other')], max_length=15)),
                ('address', models.TextField(blank=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_emergency_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Ambulance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('vehicle_number', models.CharField(max_length=20, unique=True)),
                ('driver_name', models.CharField(max_length=100)),
                ('driver_phone', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('DISPATCHED', 'Dispatched'), ('BUSY', 'Busy'), ('MAINTENANCE', 'Under Maintenance')], default='AVAILABLE', max_length=15)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('has_ventilator', models.BooleanField(default=False)),
                ('has_defibrillator', models.BooleanField(default=True)),
                ('has_oxygen', models.BooleanField(default=True)),
                ('equipment_notes', models.TextField(blank=True)),
                ('current_emergency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_ambulance', to='db.emergency')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambulances', to='db.hospital')),
            ],
            options={
                'ordering': ['hospital', 'vehicle_number'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('record_type', models.CharField(choices=[('EMERGENCY_VISIT', 'Emergency Visit'), ('REGULAR_CHECKUP', 'Regular Checkup'), ('PRESCRIPTION', 'Prescription'), ('LAB_REPORT', 'Lab Report'), ('DISCHARGE_SUMMARY', 'Discharge Summary')], max_length=50)),
                ('diagnosis', models.TextField()),
                ('treatment', models.TextField()),
                ('medications_prescribed', models.TextField(blank=True)),
                ('doctor_name', models.CharField(max_length=100)),
                ('doctor_notes', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='medical_records/')),
                ('visit_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('next_appointment', models.DateTimeField(blank=True, null=True)),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='db.hospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-visit_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notification_type', models.CharField(choices=[('EMERGENCY_ALERT', 'Emergency Alert'), ('AMBULANCE_REQUEST', 'Ambulance Request'), ('STATUS_UPDATE', 'Status Update'), ('EMERGENCY_CONTACT_ALERT', 'Emergency Contact Alert')], max_length=25)),
                ('recipient_type', models.CharField(choices=[('HOSPITAL', 'Hospital'), ('EMERGENCY_CONTACT', 'Emergency Contact'), ('USER', 'User')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('emergency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='db.emergency')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='db.hospital')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
